--- a/backports/backports.txt
+++ b/backports/backports.txt
@@ -25,6 +25,7 @@ add api_version.patch
 add pr_fmt.patch
 add debug.patch
 add drx39xxj.patch
+add stb0899_faster_tuning.patch
 
 [4.14.255]
 add v4.14_compiler_h.patch
--- /dev/null
+++ b/backports/stb0899_faster_tuning.patch
@@ -0,0 +1,139 @@
+diff --git a/drivers/media/dvb-frontends/stb0899_algo.c b/drivers/media/dvb-frontends/stb0899_algo.c
+index 3012f196e9bd..b0e0143c1da8 100644
+--- a/drivers/media/dvb-frontends/stb0899_algo.c
++++ b/drivers/media/dvb-frontends/stb0899_algo.c
+@@ -207,7 +207,6 @@ static enum stb0899_status stb0899_check_tmg(struct stb0899_state *state)
+ static enum stb0899_status stb0899_search_tmg(struct stb0899_state *state)
+ {
+ 	struct stb0899_internal *internal = &state->internal;
+-	struct stb0899_params *params = &state->params;
+ 
+ 	short int derot_step, derot_freq = 0, derot_limit, next_loop = 3;
+ 	int index = 0;
+@@ -217,10 +216,9 @@ static enum stb0899_status stb0899_search_tmg(struct stb0899_state *state)
+ 
+ 	/* timing loop computation & symbol rate optimisation	*/
+ 	derot_limit = (internal->sub_range / 2L) / internal->mclk;
+-	derot_step = (params->srate / 2L) / internal->mclk;
++	derot_step = internal->derot_step * 4;				/* dertot_step = decreasing delta */
+ 
+ 	while ((stb0899_check_tmg(state) != TIMINGOK) && next_loop) {
+-		index++;
+ 		derot_freq += index * internal->direction * derot_step;	/* next derot zig zag position	*/
+ 
+ 		if (abs(derot_freq) > derot_limit)
+@@ -231,6 +229,7 @@ static enum stb0899_status stb0899_search_tmg(struct stb0899_state *state)
+ 			STB0899_SETFIELD_VAL(CFRL, cfr[1], LSB(internal->inversion * derot_freq));
+ 			stb0899_write_regs(state, STB0899_CFRM, cfr, 2); /* derotator frequency		*/
+ 		}
++		index++;
+ 		internal->direction = -internal->direction;	/* Change zigzag direction		*/
+ 	}
+ 
+@@ -279,14 +278,18 @@ static enum stb0899_status stb0899_search_carrier(struct stb0899_state *state)
+ {
+ 	struct stb0899_internal *internal = &state->internal;
+ 
+-	short int derot_freq = 0, last_derot_freq = 0, derot_limit, next_loop = 3;
++	short int derot_freq = 0, last_derot_freq = 0, derot_limit, derot_step, next_loop = 3;
+ 	int index = 0;
++	int base_freq;
+ 	u8 cfr[2];
+ 	u8 reg;
+ 
+ 	internal->status = NOCARRIER;
+ 	derot_limit = (internal->sub_range / 2L) / internal->mclk;
+ 	derot_freq = internal->derot_freq;
++	derot_step = internal->derot_step * 2;
++	last_derot_freq = internal->derot_freq;
++	base_freq = internal->derot_freq;
+ 
+ 	reg = stb0899_read_reg(state, STB0899_CFD);
+ 	STB0899_SETFIELD_VAL(CFD_ON, reg, 1);
+@@ -295,11 +298,10 @@ static enum stb0899_status stb0899_search_carrier(struct stb0899_state *state)
+ 	do {
+ 		dprintk(state->verbose, FE_DEBUG, 1, "Derot Freq=%d, mclk=%d", derot_freq, internal->mclk);
+ 		if (stb0899_check_carrier(state) == NOCARRIER) {
+-			index++;
+ 			last_derot_freq = derot_freq;
+-			derot_freq += index * internal->direction * internal->derot_step; /* next zig zag derotator position */
++			derot_freq += index * internal->direction * derot_step; /* next zig zag derotator position	*/
+ 
+-			if(abs(derot_freq) > derot_limit)
++			if (derot_freq > base_freq + derot_limit || derot_freq < base_freq - derot_limit)
+ 				next_loop--;
+ 
+ 			if (next_loop) {
+@@ -311,9 +313,10 @@ static enum stb0899_status stb0899_search_carrier(struct stb0899_state *state)
+ 				STB0899_SETFIELD_VAL(CFRL, cfr[1], LSB(internal->inversion * derot_freq));
+ 				stb0899_write_regs(state, STB0899_CFRM, cfr, 2); /* derotator frequency	*/
+ 			}
++			index++;
++			internal->direction = -internal->direction; /* Change zigzag direction */
+ 		}
+ 
+-		internal->direction = -internal->direction; /* Change zigzag direction */
+ 	} while ((internal->status != CARRIEROK) && next_loop);
+ 
+ 	if (internal->status == CARRIEROK) {
+@@ -339,6 +342,7 @@ static enum stb0899_status stb0899_check_data(struct stb0899_state *state)
+ 	int lock = 0, index = 0, dataTime = 500, loop;
+ 	u8 reg;
+ 
++	msleep(1);
+ 	internal->status = NODATA;
+ 
+ 	/* RESET FEC	*/
+@@ -349,6 +353,7 @@ static enum stb0899_status stb0899_check_data(struct stb0899_state *state)
+ 	reg = stb0899_read_reg(state, STB0899_TSTRES);
+ 	STB0899_SETFIELD_VAL(FRESACS, reg, 0);
+ 	stb0899_write_reg(state, STB0899_TSTRES, reg);
++	msleep(1);
+ 
+ 	if (params->srate <= 2000000)
+ 		dataTime = 2000;
+@@ -364,6 +369,7 @@ static enum stb0899_status stb0899_check_data(struct stb0899_state *state)
+ 
+ 	stb0899_write_reg(state, STB0899_DSTATUS2, 0x00); /* force search loop	*/
+ 	while (1) {
++		msleep(1); 		// Alex: added 1 mSec
+ 		/* WARNING! VIT LOCKED has to be tested before VIT_END_LOOOP	*/
+ 		reg = stb0899_read_reg(state, STB0899_VSTATUS);
+ 		lock = STB0899_GETFIELD(VSTATUS_LOCKEDVIT, reg);
+@@ -391,20 +397,21 @@ static enum stb0899_status stb0899_search_data(struct stb0899_state *state)
+ 	short int derot_freq, derot_step, derot_limit, next_loop = 3;
+ 	u8 cfr[2];
+ 	u8 reg;
+-	int index = 1;
++	int index = 0;
++	int base_freq;
+ 
+ 	struct stb0899_internal *internal = &state->internal;
+-	struct stb0899_params *params = &state->params;
+ 
+-	derot_step = (params->srate / 4L) / internal->mclk;
++	derot_step = internal->derot_step;
+ 	derot_limit = (internal->sub_range / 2L) / internal->mclk;
+ 	derot_freq = internal->derot_freq;
++	base_freq = internal->derot_freq;
+ 
+ 	do {
+ 		if ((internal->status != CARRIEROK) || (stb0899_check_data(state) != DATAOK)) {
+ 
+ 			derot_freq += index * internal->direction * derot_step;	/* next zig zag derotator position */
+-			if (abs(derot_freq) > derot_limit)
++			if (derot_freq > base_freq + derot_limit || derot_freq < base_freq - derot_limit)
+ 				next_loop--;
+ 
+ 			if (next_loop) {
+@@ -418,9 +425,9 @@ static enum stb0899_status stb0899_search_data(struct stb0899_state *state)
+ 				stb0899_write_regs(state, STB0899_CFRM, cfr, 2); /* derotator frequency	*/
+ 
+ 				stb0899_check_carrier(state);
+-				index++;
+ 			}
+ 		}
++		index++;
+ 		internal->direction = -internal->direction; /* change zig zag direction */
+ 	} while ((internal->status != DATAOK) && next_loop);
+ 
